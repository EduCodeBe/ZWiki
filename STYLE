================================
Zwiki coding style and practices
================================

This is both to explain current practices and to collect guidelines that help us.


Documentation
=============

Most Zwiki documentation is kept in the http://zwiki.org wiki.  
Developer-specific docs are under http://zwiki.org/DeveloperNotes.

Developer documentation may increasingly move to files within the
codebase, however.  These typically use restructured text markup, like
this file.  To browse these filesystem docs online, use
http://zwiki.org/repos/ZWiki or the darcsweb interface.
(See also: FILESYSTEM_VS_WIKI_DOCS)

We have the following kinds of in-code documentation:

- ALLCAPS documentation files in any directory, like this README

- File docstrings

- Class docstrings

- Method/function docstrings

- Comments

  - comments are sometimes used instead of the docstrings above. This may
    or may not be appropriate, I don't know.

  - a section heading within a file, class or method.

  - a short explanatory comment appended to a line of code. 

  - longer explanatory comments when necessary.

  The Zwiki code has a lot of chatty comments. Nowadays we should try to
  minimise their use eg by making them unnecessary or by using
  intention-revealing names.

- Names

  Names of directories, files, classes, methods, variables are where
  documentation meets code. They are perhaps our most powerful tool. :)

  Use clarifying and intention-revealing names wherever possible to
  minimise the need for other documentation.

  Choosing good names for small chunks of code helps us to build up our
  own mini-language (DSL) for Zwiki-building, which helps us to say more
  with less code.


Conciseness
-----------
Concise, not over-verbose, non-redundant docs are good. To help us write
better docs, we could try to follow this length guideline when possible:

 ================= =================================================
 doc files         any length
 file docstrings   one paragraph
 class docstrings  one paragraph
 method docstrings one sentence, plus one per argument, or as needed
 comments          one sentence or fragment, on one line
 ================= =================================================


More about docstrings
---------------------

The first sentence should be concise summary of the object's purpose.
Older docstrings follow the PEP guideline to separate the first line from
the rest with a blank line, but we have abandoned this to save vertical
space. For the same reason, feel free to omit the line breaks at the
docstring's start and end if it doesn't hurt readability. 

Describe method arguments and return values when needed. We might want to
come up with a standard haskellish way of noting the expected input and
output types and whether side effects are expected.


More about naming
-----------------
Try to give procedures (functions/methods with side effects) verb names.
Try to give variables and side-effect-free functions noun names.


Security
--------

To specify method permissions, we sometimes use explicit zope security
declarations, sometimes omit the docstring, and sometimes use the _
prefix. The latter two interfere with readability and should be phased
out. We probably want to move to an all methods private by default policy,
and explicity declare permissions on everything that we want to expose.a


Imports
-------
Imports are usually at the start of the file and in three groups: python,
then zope, then zwiki imports.




.. 

 Local Variables:
 mode: rst
 End:
