<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<tal:comment replace="nothing">
UI.py:editform() calls us with these options:
 page   - name of page to edit/create
 text   - initial contents of text area
 action - 'Create' or 'Edit'
</tal:comment>
<tal:block define="global page options/page;
                   global action options/action; 
		   global text options/text; 
		   global pagetypes here/allowedPageTypes;
		   global creating python:action=='Create';
		   global editing  python:not creating;
		   global renamingsolepage python: 
		     editing and len(here.pages())==1 and here.id()!='FrontPage'
		     # are we editing the only page in this wiki ?
		     # if so, we'll make the page name default to FrontPage
		     # (intended to rename the first ugly CMF-named page,
		     # but will activate any time we edit a lone page) ;
		   " />

<html xmlns:tal="http://xml.zope.org/namespaces/tal"
       xmlns:metal="http://xml.zope.org/namespaces/metal"
       metal:use-macro="here/main_template/macros/master"
       i18n:domain="zwiki">

<body>

<div metal:fill-slot="main">

    <span metal:use-macro="python:here.wikipage_macros().macros['quickaccesskeys']" />

    <h1 i18n:translate="heading_edit_wiki_page" tal:condition="python:action!='Create'">
    Edit
        <span i18n:name="itemtype">
              <span i18n:translate=""         
                    tal:content="python:here.getTypeInfo().Title()" 
                    tal:omit-tag="">Item type</span>
        </span> 

        "<span tal:omit-tag="" tal:content="page" i18n:name="pagename">page</span>"

    </h1>
 
    <h1 i18n:translate="heading_edit_wiki_page" tal:condition="python:action=='Create'">
    Add
        <span i18n:name="itemtype">
              <span i18n:translate=""         
                    tal:content="python:here.getTypeInfo().Title()" 
                    tal:omit-tag="">Item type</span>
        </span> 

        "<span tal:omit-tag="" tal:content="page" i18n:name="pagename">page</span>"
        
    </h1>

    <p i18n:translate="description_edit_wiki_page">
    A Wiki Page allows you to create richly interconnected pages.
    </p>  
  
    <form name="edit_form"
          method="post" 
          enctype="multipart/form-data"
          action="" 
          tal:attributes="action string:${here/page_url}/edit">

        <fieldset>
            <legend i18n:translate="legend_wiki_page_details">Wiki Page Details</legend>    

            <input name="timeStamp" 
                   type="hidden" 
    	       value=""
                   tal:attributes="value here/editTimestamp|nothing" />
                 
            <input name="page" 
                   type="hidden"
                   value="" 
                   tal:attributes="value page" />
        
            <input name="leaveplaceholder" 
                   value="" 
                   type="hidden"
                   tal:condition="python:creating or renamingsolepage
                   # never leave a placeholder in these situations ;
                   " />
    
        <div class="field"
             tal:define="error errors/title|nothing;
                         title page;"> 

            <label for="title" i18n:translate="label_pagename">Page name</label>
            
            <span class="fieldRequired" title="Required"
                  i18n:attributes="title"
                  i18n:translate="label_required">(Required)</span>
                
            <div class="formHelp" i18n:translate="help_shortname">
            Note: Renaming a page in a large wiki may be slow. Other pages will be updated if possible.
            </div>

            <div tal:content="error">Validation error output</div>

            <input type="text"
                   id="title"
                   name="title" 
                   value="" 
                   size="40" 
                   tabindex=""
                   tal:attributes="value python: (renamingsolepage and 'FrontPage') or title;
                                   tabindex tabindex/next|nothing;" 
                   />
        </div>

        <div class="field"> 

            <label i18n:translate="label_body_text">Body text</label> 
        
            <div class="formHelp" i18n:translate="help_wikibody">
            In a Wiki page, you use [square brackets] to create links. When you save the page, the contents
            of the square brackets will have a small <code>?</code> link next to it, which you click to create
            a new page with that name.
            </div>
            
            <textarea tal:condition="not:here/supportsEpoz"
                      name="text" 
                      rows="20" 
                      cols="60"
                      tabindex=""
                      tal:attributes="rows python:request.get('zwiki_height','') or 20;
                                      cols python:request.get('zwiki_width','') or 60;
                                      tabindex tabindex/next|nothing;"
                      tal:content="text">
                text
            </textarea>
            <span tal:condition="here/supportsEpoz"
                  tal:replace="structure python:
                  here.Epoz(
                  'text',
                  data=text,
                  style='background:white;border:thin solid black;width:100%;height:300px;',
                  )
                  #toolbox='/toolbox',
                  #lang='en',
            "></span>

            <div class="formHelp" 
                 tal:condition="here/wikinameLinksAllowed"
                 i18n:translate="help_wikiwords">
            This wiki also supports WikiWords as a link mechanism.
            </div>

        </div>

        <div class="field"
             tal:define="error errors/note|nothing;"> 
            
            <label i18n:translate="label_note">Note for the page history (optional)</label>
                
            <div class="formHelp" i18n:translate="help_wikinote">
               A short description of your changes.
            </div>
            
            <div tal:content="error">Validation error output</div>

            <input type="text" 
                   name="log" 
                   value="" 
                   size="40" 
                   tabindex=""
                   tal:attributes="tabindex tabindex/next|nothing;
                                   value python:(editing and here.usernameFrom(request) == here.last_editor and here.ZopeTime() - here.lastEditTime() < 1) and here.last_log or '' #format that :) ;"
                   />
        </div>

        
        <div class="field"
             tal:define="error errors/file|nothing;
                         uploaddir nocall:here/uploads|here;"
             tal:condition="python:user.has_permission('Add Documents, Images, and Files', uploaddir)"> 
            
            <label i18n:translate="label_upload_contents_optional">Upload file or image (optional)</label>

            <div class="formHelp" i18n:translate="help_wikiupload">
            Attaches a file or an image to this wiki page.
            </div>
            
            <div tal:content="error">Validation error output</div>

            <input type="file" 
                 name="file" 
                 size="30" 
                 tabindex="" 
                 tal:attributes="tabindex tabindex/next|nothing;" 
                 />
        </div>


        <div class="field" 
             tal:condition="python:user.has_permission('Zwiki: Change page types', here)">

            <label i18n:translate="label_format">Page Format</label>

            <div class="formHelp" i18n:translate="help_format">
            If you are unsure of which format to use, just select Plain
            Text and type the document as you usually do.
            </div>
            
            <!-- XXX Fix me: 
                 We may want to map this attribute to the 'text_format'
                 attribute of CMF objects, so they know what to do
                 with the object when it is rendered in other contexts.
                    (Even though the Wiki links will not work, it will
                                   know an approximately correct rendering mode)
                                   Another interesting thing will be the Transform
                                   tool of Archetypes - if somebody wrote a Wiki
                                   transform tool, you could use wiki notation in 
                                   any object. I'll leave that as an exercise for
                                   the reader for now, though ;)   (limi, june 2003)
                                   -->

            <tal:formats repeat="type pagetypes"
                         define="tabindex tabindex/next|nothing;
                                 text_format python:request.get('text_format', getattr(here,'text_format','structured-text'))">
                <input class="noborder" 
                       type="radio" 
                       name="type"
                       value="pagetype" 
                       tabindex=""
                       id="pagetype"
                       tal:attributes="checked python:test(type==((creating and here.defaultPageType()) or here.pageTypeId()), 1, None);
                                       value python:type;
                                       id python:type;
                                       tabindex tabindex|nothing;" 
                       />
                <label for="pagetype" 
                       i18n:translate="pagetype"
                       tal:define="dtmlallowed python:type.find('dtml')!=-1 and here.dtmlAllowed();
                                   extrasuffix python:dtmlallowed and ' (+ DTML)' or ''; "
                       tal:content="python:
                                      here.PAGE_TYPES.get(type,type) + extrasuffix"
                       tal:attributes="for python:type;
                                       i18n:translate python:type #XXX;"
                >Page type</label> <br />
            </tal:formats>
                        
        </div>


        <div class="formControls" tal:define="process_creation request/process_creation|nothing;">
            <input class="context" 
                   tabindex=""
                   type="submit" 
                   name="Change" 
                   value="Save" 
                   accesskey="s"
                   i18n:attributes="value"
                   tal:attributes="tabindex string:20;" /> 
        </div>

    </form>

  </div>

</body>
</html>
